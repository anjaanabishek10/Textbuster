///https://github.com/anjaanabishek10

/////Import/////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import java.util.*;
import java.io.*;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////Class Textbuster/////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

public class textbuster

{

/////clearConsole/////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public final static void clearConsole()

    {

        try

        {

            final String os = System.getProperty("os.name");

            if (os.contains("Windows"))

            {

                new ProcessBuilder("cmd", "/c", "cls").inheritIO().start().waitFor();

            }

            else

            {

                System.out.print(String.format("\033[H\033[2J"));

            }

        }

        catch (IOException | InterruptedException ex)

        {

            System.out.println("\033[1;31mPROGRAM TERMINATED:");
            System.out.println("\033[1;31m!!!\033[1;37mThis only works with Windows and Linux\033[1;31m!!!");

        }

    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    

/////banner/////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    

    public static void banner()

    {

        System.out.println("\033[1;31m████████\033[1;37m╗\033[1;31m███████\033[1;37m╗\033[1;31m██\033[1;37m╗  \033[1;31m██\033[1;37m╗\033[1;31m████████\033[1;37m╗\033[1;31m██████\033[1;37m╗ \033[1;31m██\033[1;37m╗   \033[1;31m██\033[1;37m╗\033[1;31m███████\033[1;37m╗\033[1;31m████████\033[1;37m╗\033[1;31m███████\033[1;37m╗\033[1;31m██████\033[1;37m╗");
        System.out.println("\033[1;37m╚══\033[1;31m██\033[1;37m╔══╝\033[1;31m██\033[1;37m╔════╝╚\033[1;31m██\033[1;37m╗\033[1;31m██\033[1;37m╔╝╚══\033[1;31m██\033[1;37m╔══╝\033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m╗\033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m║\033[1;31m██\033[1;37m╔════╝╚══\033[1;31m██\033[1;37m╔══╝\033[1;31m██\033[1;37m╔════╝\033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m╗");
        System.out.println("\033[1;31m   ██\033[1;37m║   \033[1;31m█████\033[1;37m╗   ╚\033[1;31m███\033[1;37m╔╝    \033[1;31m██\033[1;37m║   \033[1;31m██████\033[1;37m╔╝\033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m║\033[1;31m███████\033[1;37m╗   \033[1;31m██\033[1;37m║   \033[1;31m█████\033[1;37m╗  \033[1;31m██████\033[1;37m╔╝");
        System.out.println("\033[1;31m   ██\033[1;37m║   \033[1;31m██\033[1;37m╔══╝   \033[1;31m██\033[1;37m╔\033[1;31m██\033[1;37m╗    \033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m╗\033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m║╚════\033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m║   \033[1;31m██\033[1;37m╔══╝  \033[1;31m██\033[1;37m╔══\033[1;31m██\033[1;37m╗");
        System.out.println("\033[1;31m   ██\033[1;37m║   \033[1;31m███████\033[1;37m╗\033[1;31m██\033[1;37m╔╝ \033[1;31m██\033[1;37m╗   \033[1;31m██\033[1;37m║   \033[1;31m██████\033[1;37m╔╝╚\033[1;31m██████\033[1;37m╔╝\033[1;31m███████\033[1;37m║   \033[1;31m██\033[1;37m║   \033[1;31m███████\033[1;37m╗\033[1;31m██\033[1;37m║  \033[1;31m██\033[1;37m║");
        System.out.println("\033[1;37m   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚═════╝  ╚═════╝ ╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝");
        System.out.println("\033[1;31mhttps://github.com/anjaanabishek10                      +-+-+-+-+-+-+-+-+-+-+-+-+-+");
        System.out.println("                                                        |\033[1;37mU\033[1;31m|\033[1;37mn\033[1;31m|\033[1;37m5\033[1;31m|\033[1;37me\033[1;31m|\033[1;37me\033[1;31m|\033[1;37mN\033[1;31m|\033[1;37m3\033[1;31m|\033[1;37mx\033[1;31m|\033[1;37mP\033[1;31m|\033[1;37m1\033[1;31m|\033[1;37m0\033[1;31m|\033[1;37mI\033[1;31m|\033[1;37mT\033[1;31m|");
        System.out.println("                                                        +-+-+-+-+-+-+-+-+-+-+-+-+-+\n");
        System.out.println("\033[1;31m# \033[1;37mDISCORD  :   anjaanabishek#6186                               \033[1;31m#");
        System.out.println("\033[1;31m# \033[1;37mGMAIL    :   anjaanabishek10@gmail.com                        \033[1;31m#");
        System.out.println("\033[1;31m# \033[1;37mINSTA    :   https://www.instagram.com/anjaan.abishek/        \033[1;31m#");
        System.out.println("\033[1;31m# \033[1;37mLINKEDIN :   https://www.linkedin.com/in/abishek-k-11217b1b5/ \033[1;31m#\n");

    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    

/////help/////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    

    public static void help()

    {

        System.out.println("\033[1;31mUSAGE:");
        System.out.println("\033[1;37mjava -jar textbuster.jar flag message\n");
        System.out.println("\033[1;31mFLAG:");
        System.out.println("\033[1;37m-h or --help    =>  Display help menu");
        System.out.println("\033[1;37m-s or --single  =>  Pass single word message");
        System.out.println("\033[1;37m-m or --multi   =>  Pass multiple words message");
        System.out.println("\033[1;37m-l or --line    =>  Pass Sentence or Passage\n");
        System.out.println("\033[1;31mEXAMPLE:");
        System.out.println("\033[1;37mjava -jar textbuster.jar -h");
        System.out.println("\033[1;37mjava -jar textbuster.jar -s example");
        System.out.println("\033[1;37mjava -jar textbuster.jar -m this is an example");
        System.out.println("\033[1;37mjava -jar textbuster.jar -l this is an example\n");
        System.out.println("\033[1;31m!!!\033[1;37m-m print in multiple line and -l print in single line\033[1;31m!!!\n");

    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    

////main////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public static void main(String args[])

    {

        try

        {

            if ((args[0].equals("-h") || args[0].equals("--help")) && args.length == 1)

            {

                clearConsole();
                banner();
                help();

            }

            else if ((args[0].equals("-s") || args[0].equals("--single")) && args.length == 2)

            {

                clearConsole();
                banner();
                MouseKeyboardControl mouseKeyboardControl = new MouseKeyboardControl();
                Timer timer = new Timer();
                int length = args.length;

                timer.scheduleAtFixedRate(new TimerTask()

                {
                    int start = 1;

                    public void run()

                    {

                        String msg = args[start++];

                        for (int i = 0; i < msg.length(); i++)

                        {

                            mouseKeyboardControl.typeCharacter(msg.charAt(i));

                        }

                        mouseKeyboardControl.typeCharacter('\n');

                        if (start == length)

                        {

                            start = 1;

                        }

                    }

                }, 1000, 1000);

            }

            else if ((args[0].equals("-m") || args[0].equals("--multi")) && args.length > 2)

            {

                clearConsole();
                banner();
                MouseKeyboardControl mouseKeyboardControl = new MouseKeyboardControl();
                Timer timer = new Timer();
                int length = args.length;

                timer.scheduleAtFixedRate(new TimerTask()

                {

                    int start = 1;

                    public void run()

                    {

                        String msg = args[start++];

                        for (int i = 0; i < msg.length(); i++)

                        {

                            mouseKeyboardControl.typeCharacter(msg.charAt(i));

                        }

                        mouseKeyboardControl.typeCharacter('\n');

                        if (start == length)

                        {

                            start = 1;

                        }

                    }

                }, 1000, 1000);

            }

            else if ((args[0].equals("-l") || args[0].equals("--line")) && args.length > 2)

            {

                String sum[] = {args[1]};

                for (int i = 2; i < args.length; i++)

                {

                    sum[0] = sum[0] + " " + args[i];

                }

                clearConsole();
                banner();
                MouseKeyboardControl mouseKeyboardControl = new MouseKeyboardControl();
                Timer timer = new Timer();
                int length = sum.length;

                timer.scheduleAtFixedRate(new TimerTask()

                {

                    int start = 0;

                    public void run()

                    {

                        String msg = sum[start++];

                        for (int i = 0; i < msg.length(); i++)

                        {

                            mouseKeyboardControl.typeCharacter(msg.charAt(i));

                        }

                        mouseKeyboardControl.typeCharacter('\n');

                        if (start == length)

                        {

                            start = 0;

                        }

                    }

                }, 1000, 1000);

            }

            else

            {

                clearConsole();
                banner();
                help();

            }

        }

        catch (ArrayIndexOutOfBoundsException e)

        {

            clearConsole();
            banner();
            help();

        }

    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
